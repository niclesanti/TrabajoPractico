package views;

import controllers.GestorCliente;
import controllers.GestorPoliza;
import dto.CuotaDTO;
import dto.DatosPolizaDTO;
import dto.VehiculoDTO;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.persistence.EntityManager;
import javax.swing.JFrame;
import messages.Util;
import models.entities.FormaPagoEnum;
import models.entities.TipoCobertura;

public class MenuAltaPoliza2 extends javax.swing.JFrame {

    private EntityManager entityManager;
    GestorPoliza gestorPoliza;
    GestorCliente gestorCliente;
    
    DatosPolizaDTO datosPolizaDTO;
    VehiculoDTO vehiculoDTO;
    CuotaDTO cuotaDTO;
    
    public MenuAltaPoliza2 () {
        initComponents();
        gestorPoliza = new GestorPoliza();
        gestorCliente = new GestorCliente();
        mostrarTipoCobertura();
        mostrarFormaPago();
        mostrarFecha();
    }
    
    public MenuAltaPoliza2(DatosPolizaDTO datosPolizaDTO, VehiculoDTO vehiculoDTO) {
        initComponents();
        gestorPoliza = new GestorPoliza();
        gestorCliente = new GestorCliente();
        
        this.datosPolizaDTO = datosPolizaDTO;
        this.vehiculoDTO = vehiculoDTO;
        
        mostrarTipoCobertura();
        mostrarFormaPago();
        mostrarFecha();
    }

    public void mostrarTipoCobertura () {
        try {
            String anioVehiculoStr = vehiculoDTO.getAnioFabricacion();
            int anioVehiculo = Integer.parseInt(anioVehiculoStr);
            Calendar calendar = Calendar.getInstance();
            int anioActual = calendar.get(Calendar.YEAR);

            int diferenciaAnios = anioActual - anioVehiculo;
            if (diferenciaAnios > 10) {
                txtTipoCobertura.addItem("Responsabilidad Civil");
            } else {
                List<TipoCobertura> tipoCobertura = gestorPoliza.mostrarTipoCobertura();
                for (int i=0; i<tipoCobertura.size(); i++){
                    txtTipoCobertura.addItem(tipoCobertura.get(i).getEspecificacion());
                }
            }
        } catch (Exception e) {
            Util.mensajeError("Error", e.getMessage());
            this.setVisible(false);
            this.dispose();
        } 
    }
    
    public void mostrarFormaPago () {
        for (FormaPagoEnum estado : FormaPagoEnum.values()) {
            txtFormaPago.addItem(estado.name());
        }
    }
    
    public void mostrarFecha () {
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.DAY_OF_MONTH, 1);
        txtInicioVigencia.setDate(cal.getTime());
    }
    
    public float calcularPremio(){
        switch(txtTipoCobertura.getSelectedItem()+""){
            case "Responsabilidad Civil":
                return (float)10000;
            case "Resp. Civil, Robo o Incendio Total":
                return (float) 13000;
            case "Todo Total":
                return (float)20000;
            case "Terceros Completos":
                return (float)12000;    
            case "Todo Riesgo con Franquicia":
                return (float)25000;
            default:
                return (float) 0;       
        }
    }
    
    public static float redondear(float valor, int decimales) {
        if (decimales < 0) throw new IllegalArgumentException("El nÃºmero de decimales no puede ser negativo");

        int factor = (int) Math.pow(10, decimales);
        return Math.round(valor * factor) / (float) factor;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTipoCobertura = new javax.swing.JComboBox<>();
        txtFormaPago = new javax.swing.JComboBox<>();
        txtInicioVigencia = new com.toedter.calendar.JDateChooser();
        jSeparator2 = new javax.swing.JSeparator();
        btnCancelar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Alternativas de Cobertura");

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Tipo de Cobertura:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Fecha de inicio de vigencia:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Forma de Pago:");

        txtTipoCobertura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));

        txtFormaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));

        txtInicioVigencia.setDateFormatString("dd/MM/yyyy");
        txtInicioVigencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtInicioVigenciaMouseExited(evt);
            }
        });
        txtInicioVigencia.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtInicioVigenciaPropertyChange(evt);
            }
        });

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        btnCancelar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAceptar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnAceptar.setText("Confirmar Datos");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtInicioVigencia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTipoCobertura, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFormaPago, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(177, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAceptar)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTipoCobertura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtInicioVigencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtFormaPago)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(79, 79, 79)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnAceptar))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        try {
            if ( Util.mensajeConfirmacion("ConfirmaciÃ³n", "Â¿EstÃ¡ seguro que desea salir?") ){
                this.setVisible(false);
                this.dispose();
        }} catch (Exception e){
            Util.mensajeError("Error", e.getMessage());
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // Validaciones
        try {
            String tipoCobertura = (String) txtTipoCobertura.getSelectedItem();
            String formaPago = (String) txtFormaPago.getSelectedItem();
            Date inicioVigencia = txtInicioVigencia.getDate();
            if (inicioVigencia.before(new Date())) {
                    Util.mensajeAdvertencia("Advertencia", "La fecha de inicio de vigencia no puede ser anterior a la fecha actual.");
                    Calendar cal = Calendar.getInstance();
                    cal.add(Calendar.DAY_OF_MONTH, 1);
                    txtInicioVigencia.setDate(cal.getTime());
                } else {
                    Calendar calendar = Calendar.getInstance();
                    calendar.setTime(inicioVigencia);
                    calendar.add(Calendar.MONTH, 6);
                    Date finVigencia = calendar.getTime();
                    if (tipoCobertura.equals("Seleccionar") || formaPago.equals("Seleccionar")) {
                        Util.mensajeAdvertencia("Advertencia", "No se permiten campo/s vacÃ­o/s");
                    } else {
                        datosPolizaDTO.setTipoCobertura(tipoCobertura);
                        datosPolizaDTO.setFormaPago(formaPago);
                        datosPolizaDTO.setInicioVigencia(inicioVigencia);
                        datosPolizaDTO.setFinVigencia(finVigencia);
                        datosPolizaDTO.setPremio(redondear(calcularPremio(),2));
                        datosPolizaDTO.setImporteDescuento(redondear((float) 0.15 * calcularPremio(),2));
                        datosPolizaDTO.setMontoTotal(redondear(datosPolizaDTO.getPremio() + datosPolizaDTO.getImporteDescuento(),2));

                        // MenuAltaPoliza3
                        JFrame pantalla = new MenuAltaPoliza3(datosPolizaDTO, vehiculoDTO);
                        this.setVisible(false);
                        pantalla.setVisible(true);
                        pantalla.setLocationRelativeTo(null);
                        this.dispose();
                    }
            }
        } catch (Exception e) {
            Util.mensajeError("Error", e.getMessage());
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void txtInicioVigenciaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtInicioVigenciaPropertyChange
        
    }//GEN-LAST:event_txtInicioVigenciaPropertyChange

    private void txtInicioVigenciaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtInicioVigenciaMouseExited
        System.out.println("views.MenuAltaPoliza2.txtInicioVigenciaMouseExited()");
    }//GEN-LAST:event_txtInicioVigenciaMouseExited

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox<String> txtFormaPago;
    private com.toedter.calendar.JDateChooser txtInicioVigencia;
    private javax.swing.JComboBox<String> txtTipoCobertura;
    // End of variables declaration//GEN-END:variables

}
